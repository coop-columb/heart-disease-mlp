name: API Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/heart_api/**'
      - 'tests/test_api*'
      - 'docs/api*'
  pull_request:
    paths:
      - 'src/heart_api/**'
      - 'tests/test_api*'
      - 'docs/api*'

jobs:
  api-validation:
    name: Validate API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Validate OpenAPI Spec
        run: |
          python scripts/validate_openapi.py \
            --check-schema \
            --check-examples \
            --check-security
      
      - name: Run API Tests
        run: |
          pytest tests/test_api*.py \
            --threshold-response-time 200 \
            --check-status-codes \
            --validate-responses

  api-security:
    name: API Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.9.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
      
      - name: Check JWT Implementation
        run: |
          python scripts/check_jwt_security.py \
            --check-expiration \
            --check-algorithm \
            --check-secret-handling
      
      - name: API Authorization Tests
        run: |
          python scripts/test_api_auth.py \
            --check-roles \
            --check-scopes \
            --check-rate-limits

  api-performance:
    name: API Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Load Testing
        run: |
          python scripts/api_load_test.py \
            --concurrent-users 50 \
            --duration 300 \
            --max-latency 500
      
      - name: Batch Processing Test
        run: |
          python scripts/test_batch_processing.py \
            --batch-size 100 \
            --concurrent-batches 5
      
      - name: Memory Usage Check
        run: |
          python scripts/check_api_memory.py \
            --max-usage "500MB" \
            --check-leaks

  api-documentation:
    name: API Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate API Docs
        run: |
          python scripts/validate_api_docs.py \
            --check-completeness \
            --verify-examples \
            --check-links
      
      - name: Generate OpenAPI Docs
        run: |
          python scripts/generate_api_docs.py \
            --format html \
            --include-examples \
            --validate
