name: Deploy to Render

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov black isort flake8

    - name: Lint with flake8
      run: |
        flake8 src api tests --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src api tests --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run basic tests only
      run: |
        python -c "import os; os.makedirs('data/processed', exist_ok=True); os.makedirs('models', exist_ok=True)"
        # Run only core unit tests and skip integration/model tests that require data or services
        pytest -v tests/test_models.py::test_build_sklearn_mlp tests/test_models.py::test_build_keras_mlp tests/test_models.py::test_combine_predictions tests/test_models.py::test_interpret_prediction tests/test_data.py::test_binarize_target tests/test_data.py::test_create_preprocessing_pipeline tests/test_data.py::test_create_feature_interactions

  deploy-to-render:
    name: Deploy to Render
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        id: check_secrets
        run: |
          if [[ -z "${{ secrets.RENDER_API_KEY }}" ]]; then
            echo "RENDER_API_KEY is missing. Skipping deployment."
            echo "skip_deployment=true" >> $GITHUB_OUTPUT
          else
            echo "All required secrets are available."
            echo "skip_deployment=false" >> $GITHUB_OUTPUT
          fi

      - name: Deploy to Render
        if: steps.check_secrets.outputs.skip_deployment != 'true'
        uses: JorgeLNJunior/render-deploy@v1.4.3
        with:
          service_id: ${{ secrets.RENDER_SERVICE_ID }}
          api_key: ${{ secrets.RENDER_API_KEY }}
          clear_cache: false
          wait_deploy: true # Wait for deployment to complete

      - name: Deployment verification
        if: steps.check_secrets.outputs.skip_deployment != 'true'
        run: |
          echo "Deployment to Render completed. Verifying health..."
          
          # Wait for the deployment to be available (Render can take a moment)
          sleep 30
          
          # Verify health endpoint (optional) - this assumes your service URL is in secrets
          if [[ -n "${{ secrets.RENDER_SERVICE_URL }}" ]]; then
            echo "Checking health endpoint..."
            STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.RENDER_SERVICE_URL }}/health || echo "failed")
            
            if [[ "$STATUS_CODE" == "200" ]]; then
              echo "✅ Health check passed: $STATUS_CODE"
            else
              echo "⚠️ Health check returned: $STATUS_CODE (deployment may still be in progress)"
              echo "Visit Render dashboard to check deployment status."
            fi
          else
            echo "RENDER_SERVICE_URL not set. Skipping health verification."
          fi